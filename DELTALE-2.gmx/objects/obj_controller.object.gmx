<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Play Ambience / Initialize Variables

global.gP = false;
global.speaking = false;
global.debugScreen = 0;
font = fnt_UI;
// 0 = Gale, 1 = Asher, 2 = Mira, 3 = Nicole
global.headshot = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_screenshake</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>mouse_x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>mouse_y</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_bronzeWing</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>mouse_x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>mouse_y</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Load Audio Groups
if (!audio_group_is_loaded(ag_sfx)) {
    audio_group_load(ag_sfx);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Unload Audio Groups
if (audio_group_is_loaded(ag_sfx)) {
    audio_group_unload(ag_sfx);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Load Audio Groups
if (!audio_group_is_loaded(ag_sfx)) {
    audio_group_load(ag_sfx);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw GUI / Debug Screen
if !window_get_fullscreen() {
    width = window_get_width();
    height = window_get_height();
} else {
    width = display_get_width();
    height = display_get_height();
}
display_set_gui_size(width,height);
draw_set_font(fnt_debug);
if (global.gP) exit;
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_color(c_white);

// On Debug Screen
if global.debugScreen = 1 
{
staminaLevel = pStats.stamina/pStats.maxstamina;
draw_text(24,16,fps_real);
draw_text(24,32,fps);
draw_healthbar(24,64,256,88,staminaLevel*100,c_black,c_dkgray,c_white,0,false,true);

if (instance_exists(obj_player))
{
draw_text(24,96,global.playerHP);
}

draw_text(24,128,global.z);
} 

else

if (room != rm_loadingScreen) {
    //////////// Not on Debug Screen
    if global.debugScreen = 0 
    {
    // Temporary GUI Variables (NOT PART OF DEBUG VARIABLES)
    // Change values when you get rid of Debug screen
    exprLevel = global.expr/pStats.maxexpr;
    staminaLevel = pStats.stamina/pStats.maxstamina;
    draw_set_font(font);
    currentCharacter = "GALE"
    
    // Health Meter (for now, in text)
    draw_set_font(fnt_debug);
    draw_text(100,102,currentCharacter);
    draw_set_font(font);
    
    // Draw gray fragments under it
    //for (var i=0; i&lt;obj_playerStats.maxhp; i++) {
    //    draw_sprite(spr_UI_heartWings, 3, 105+(i*xoffset), 21);
    //        //for CloudCoreFragment: old X = 82+(i*xoffset);
    //}
    
    // For loop (to draw Health Fragments)
    // NOTE: THIS IS NOW DONE IN OBJ_HEARTWINGHPCONTROLLER!
    //for (var i=0; i&lt;obj_playerStats.maxhp; i++) {
    //    draw_sprite(spr_UI_heartWings, global.heartWing[i], 105+(i*xoffset), 21)
    //}
    
    // Stamina Meter / Other Stuff
    draw_healthbar(100,64,332,88,staminaLevel*100,c_black,c_dkgray,c_white,0,false,true); //Stamina
    draw_text(100,118, "LEVEL: " + string(level)); //Level
    draw_healthbar(92, 89, 232, 97, exprLevel*100, c_black, c_yellow, c_yellow, 0, true, false); //Experience
    // UI Overlay
    draw_sprite(spr_UIOverlay,global.headshot,16,24);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="34">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Switch between Debug Mode and Regular Mode
global.debugScreen = !global.debugScreen;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///"HOLDUP"
if (room != rm_pause){
with(obj_music_player)
{
    scr_music_stop();
}
audio_play_sound(snd_holdup,1,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
